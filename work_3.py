"""
Найти решение ур-я на заданном отрезке
1) методом простой итерации
2) методом Ньютона
Вариант 4
Уравнение_________________________[a;b], e
0.25x^3+x-1.2502=0________________[0;2], e = 0.0001
"""


# начальная функция
def f(x):
    return 0.25 * x ** 3 + x - 1.2502


# производная
def df(x):
    return 0.75 * x ** 2 + 1


"""
Алгоритм метода простой итерации
1) Вычисляем новое значение приближения
2) Проверяем условие выхода |result|<1
3) В случае не выполнения условия (2) обновляем приближение по формуле Ньютона
4) Дальнейшее выполнение
"""


def simple_iteration(phi, x0, eps, max_iter=1000):
    x_prev = x0
    for i in range(max_iter):
        x_next = phi(x_prev)
        if abs(x_next - x_prev) < eps:
            return x_next, i + 1
        x_prev = x_next
    raise ValueError("Метод не сошелся за максимальное число итераций")


"""
Алгоритм метода Ньютона
1) Вычисляем значение функции и производной в текущей точке
2) Проверяем условие выхода |result|<1
3) В случае не выполнения условия (2) обновляем приближение по формуле Ньютона
4) Дальнейшее выполнение
"""


def newton(f, df, x0, eps, max_iter=1000):
    x_prev = x0
    for i in range(max_iter):
        f_val = f(x_prev)
        df_val = df(x_prev)
        x_next = x_prev - f_val / df_val
        if abs(x_next - x_prev) < eps:
            return x_next, i + 1
        x_prev = x_next
    raise ValueError("Метод не сошелся за максимальное число итераций")


if __name__ == "__main__":
    """
    Выражаю x чтобы |f'(x)|< 1
    1) x = 1.2502 - 0.25x^3
       x' = -0.75x^2
       Подставляю значения из промежутка [0,2]
       0: f'(0) = 0 < 1       2:f'(2) = |-3| > 1 - не подходит
    2) x = (1.2502 - x)^(1/3)
       x'= -1/(3* pow((1.2502 - x),2/3)
       Подставляю значения из промежутка [0,2]
       0: f'(0) = 0.287 < 1   2:f'(2) = 0.4038 < 1 -подходит
    """
    a = 0
    b = 2
    phi = lambda x: pow((1.2502 - x), (1 / 3))
    x0 = (a+b) / 2  # Начальное приближение
    eps = 0.0001

    # Метод простых итераций
    try:
        root_simple, iter_simple = simple_iteration(phi, x0, eps)
        print(f"Метод простой итерации: x = {root_simple:.6f}, итераций: {iter_simple}")
    except Exception as e:
        print(f"\nОшибка в методе простой итерации: {e}")

    # Метод Ньютона
    try:
        root_newton, iter_newton = newton(f, df, x0, eps)
        print(f"Метод Ньютона: x = {root_newton:.6f}, итераций: {iter_newton}")
    except Exception as e:
        print(f"\nОшибка в методе Ньютона-Лейбнице: {e}")
